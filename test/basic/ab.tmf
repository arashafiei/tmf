tmf ab {
    topology {
        nodes = A,B;
        edges = e1(A,B);
    }
    actor A {
        computation = IntProducer;
        last = 64;
    }
    actor B {
        computation = IntConsumer;
    }
}
rule r1 {
left {
    topology {
        nodes = A,B;
        edges = e1(A,B);
    }
    actor A {
        computation = IntProducer;
        last = 64;
    }
    actor B {
        computation = IntConsumer;
    }
}
right {
    topology {
        nodes = A,C,B;
        edges = e1(A,C), e2(C,B);
    }
    actor A {
        computation = IntProducer;
        last = 64;
    }
    actor B {
        computation = IntConsumer;
    }
    actor C {
        computation = Doubling;
    }
}
}
main {
	iter=32 : r1;
}
