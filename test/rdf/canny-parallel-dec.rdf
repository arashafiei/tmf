rdf canny-parallel-dec {
    topology {
        nodes = A,B,C1,C2,C3,C4,D1,D2,D3,D4,E,F;
	edges = e1(A,B), e2(B,C1), e3(B,C2), e4(B,C3), e5(B,C4), e6(C1,D1), e7(C2,D2), e8(C3,D3), e9(C4,D4), e10(D1,E), e11(D2,E), e12(D3,E), e13(D4,E), e14(E,F);
    }
    actor A {
    	computation = VideoCapture;
	file_name = pedestrian.mp4;
    }
    actor B {
    	computation = MatSplit;
	level = 2;
	output.0 = e2;
	output.1 = e3;
	output.2 = e4;
	output.3 = e5;
    }
    actor C1 {
    	computation = CvtColor;
    }
    actor C2 {
    	computation = CvtColor;
    }
    actor C3 {
    	computation = CvtColor;
    }
    actor C4 {
    	computation = CvtColor;
    }
    actor D1 {
    	computation = Canny;
	threshold = 1;
	ratio = 1;
	cvt = gray2bgr;
    }
    actor D2 {
    	computation = Canny;
	threshold = 1;
	ratio = 1;
	cvt = gray2bgr;
    }
    actor D3 {
    	computation = Canny;
	threshold = 1;
	ratio = 1;
	cvt = gray2bgr;
    }
    actor D4 {
    	computation = Canny;
	threshold = 1;
	ratio = 1;
	cvt = gray2bgr;
    }
    actor E {
    	computation = MatMerge;
	level = 2;
	input.0 = e10;
	input.1 = e11;
	input.2 = e12;
	input.3 = e13;
    }
    actor F {
    	computation = ImageWrite;
    }
}
rule r1 {
left {
    topology {
        nodes = B,x1,x2,x3,x4,y1,y2,y3,y4,z;
	edges = e1(B,x1), e2(B,x2), e3(B,x3), e4(B,x4), e5(x1,y1), e6(x2,y2), e7(x3,y3), e8(x4,y4), e9(y1,z), e10(y2,z), e11(y3,z), e12(y4,z);
    }
    actor B {
    	computation = MatSplit;
	level = 2;
    }
    actor x1 {
    	computation = CvtColor;
    }
    actor x2 {
    	computation = CvtColor;
    }
    actor x3 {
    	computation = CvtColor;
    }
    actor x4 {
    	computation = CvtColor;
    }
    actor y1 {
    	computation = Canny;
 	threshold = 1;
	ratio = 1; 
	cvt = gray2bgr;
    }
    actor y2 {
    	computation = Canny;
	threshold = 1;
	ratio = 1;
	cvt = gray2bgr;
    }
    actor y3 {
    	computation = Canny;
	threshold = 1;
	ratio = 1;
	cvt = gray2bgr;
    }
    actor y4 {
    	computation = Canny;
	threshold = 1;
	ratio = 1;
	cvt = gray2bgr;
    }
    actor z {
    	computation = MatMerge;
	level = 2;
    }
}
right {
    topology {
        nodes = B,x1,y1,z;
	edges = e1(B,x1), e2(x1,y1), e3(y1,z);
    }
    actor B {
    	computation = MatSplit;
	level = 1;
    }
    actor x1 {
    	computation = CvtColor;
    }
    actor y1 {
    	computation = Canny;
    	threshold = 1;
	ratio = 1;
	cvt = gray2bgr;
    }
    actor z {
    	computation = MatMerge;
	level = 1;
    }
}

}
main {
	load=3 : r1;
}
