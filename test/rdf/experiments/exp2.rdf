rdf exp2 {
    topology {
        nodes = Src,S,A1,J,Snk;
	edges = e1(Src,S), e2(S,A1),
		e3(A1,J), e4(J,Snk);
    }
    actor Src {
    	computation = DelaySource;
	delay = 10;
	last = 1200;
    }
    actor S {
	computation = DelaySplit;
	arity = 1;
	delay = 2;
    }
    actor A1 {
    	computation = DelayActorA;
	delay = 50;
    }
    actor J {
	computation = DelayJoin;
	arity = 1;
	delay = 2;
    }
    actor Snk {
    	computation = DelaySink;
	delay = 10;
    }
    parameter {
	logging = false;
	scheduling = false;
	policy = 0;
    }
}
rule tr1 {
left {
    topology {
        nodes = S,A1,J;
	edges = e1(S,A1), e2(A1,J);
    }
    actor S {
    	computation = DelaySplit;
	arity = 1;
    }
    actor A1 {
    	computation = DelayActorA;
    }
    actor J {
    	computation = DelayJoin;
	arity = 1;
    }
}
right {
    topology {
        nodes = S,A1,ax,J;
	edges = e1(S,A1), e2(S,ax), 
		e3(A1,J), e4(ax,J);
    }
    actor S {
    	computation = DelaySplit;
	arity = 2;
    }
    actor A1 {
    	computation = DelayActorA;
    }
    actor ax {
    	computation = DelayActorA;
	delay = 50;
    }
    actor J {
    	computation = DelayJoin;
	arity = 2;
    }
}
}
rule tr2 {
left {
    topology {
        nodes = S,A1,ax,J;
	edges = e1(S,A1), e2(S,ax), 
		e3(A1,J), e4(ax,J);
    }
    actor S {
    	computation = DelaySplit;
	arity = 2;
    }
    actor A1 {
    	computation = DelayActorA;
    }
    actor ax {
    	computation = DelayActorA;
    }
    actor J {
    	computation = DelayJoin;
	arity = 2;
    }
}
right {
    topology {
        nodes = S,A1,J;
	edges = e1(S,A1), e2(A1,J);
    }
    actor S {
    	computation = DelaySplit;
	arity = 1;
    }
    actor A1 {
    	computation = DelayActorA;
    }
    actor J {
    	computation = DelayJoin;
	arity = 1;
    }
}
}
main {
   Src.timer = 5000 : tr1;
   Src.timer = 10000 : tr1;
   Src.timer = 20000 : tr2;
   Src.timer = 25000 : tr2;
}
