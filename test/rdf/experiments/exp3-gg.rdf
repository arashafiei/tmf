rdf exp3 {
    topology {
        nodes = Src,S,A1,B1,B2,J,Snk;
	edges = e1(Src,S), e2(S,A1), e3(A1,B1), e4(B1,J),
		e5(S,B2), e6(B2,J), e7(J,Snk);
    }
    actor Src {
    	computation = DelaySource;
	delay = 10;
	last = 500;
    }
    actor S {
    	computation = DelaySplit;
	arity = 1;
	delay = 2;
    }
    actor A1 {
    	computation = DelayActorA;
	delay = 50;
    }
    actor B1 {
    	computation = DelayActorB;
	delay = 20;
    }
    actor B2 {
    	computation = DelayActorB;
	delay = 20;
    }
    actor J {
    	computation = DelayJoin;
	arity = 1;
	delay = 2;
    }
    actor Snk {
    	computation = DelaySink;
	delay = 10;
    }
    parameter {
	logging = false;
	scheduling = false;
	policy = 0;
    }
}
rule tr1 {
left {
    topology {
        nodes = Src,S,A1,B1,B2,J,Snk;
	edges = e1(Src,S), e2(S,A1), e3(A1,B1), e4(B1,J),
		e5(S,B2), e6(B2,J), e7(J,Snk);
    }
    actor Src {
    	computation = DelaySource;
	delay = 10;
	last = 500;
    }
    actor S {
    	computation = DelaySplit;
	arity = 1;
	delay = 2;
    }
    actor A1 {
    	computation = DelayActorA;
	delay = 50;
    }
    actor B1 {
    	computation = DelayActorB;
	delay = 20;
    }
    actor B2 {
    	computation = DelayActorB;
	delay = 20;
    }
    actor J {
    	computation = DelayJoin;
	arity = 1;
	delay = 2;
    }
    actor Snk {
    	computation = DelaySink;
	delay = 10;
    }
}
right {
    topology {
        nodes = Src,S,A1,B1,B2,J,Snk;
	edges = e1(Src,S), e2(S,A1), e3(A1,B1), e4(B1,J),
		e5(S,B2), e6(B2,J), e7(J,Snk);
    }
    actor Src {
    	computation = DelaySource;
	delay = 10;
	last = 500;
    }
    actor S {
    	computation = DelaySplit;
	arity = 1;
	delay = 2;
    }
    actor A1 {
    	computation = DelayActorA;
	delay = 50;
    }
    actor B1 {
    	computation = DelayActorB;
	delay = 20;
    }
    actor B2 {
    	computation = DelayActorB;
	delay = 20;
    }
    actor J {
    	computation = DelayJoin;
	arity = 1;
	delay = 2;
    }
    actor Snk {
    	computation = DelaySink;
	delay = 10;
    }
}
}
main {
   Src.timer = 10000 : tr1;
}
