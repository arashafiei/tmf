rdf cannyshow-slicemerge2 {
    topology {
        nodes = A,B,C,D,E,F;
	edges = e1(A,B), e2(B,C), e3(C,D), e4(D,E), e5(E,F);
    }
    actor A {
    	computation = VideoCapture;
	file_name = pedestrian.mp4;
    }
    actor B {
    	computation = MatSlice;
	level = 1;
    }
    actor C {
    	computation = CvtColor;
    }
    actor D {
    	computation = Canny;
	threshold = 1;
	ratio = 1;
        cvt = gray2bgr;
    }
    actor E {
    	computation = MatMerge;
	level = 1;
	text = true;
    }
    actor F {
    	computation = ImageShow;
    }
    parameter {
	logging = true;
    }
}
rule r1 {
left {
    topology {
        nodes = B,x1,y1,z;
	edges = e1(B,x1), e2(x1,y1), e3(y1,z);
    }
    actor B {
    	computation = MatSlice;
	level = 1;
    }
    actor x1 {
    	computation = CvtColor;
    }
    actor y1 {
    	computation = Canny;
    	threshold = 1;
	ratio = 1;
        cvt = gray2bgr;
    }
    actor z {
    	computation = MatMerge;
	level = 1;
	text = true;
    }
}
right {
    topology {
        nodes = B,x1,x2,y1,y2,z;
	edges = e1(B,x1), e2(B,x2), e3(x1,y1), e4(x2,y2), e5(y1,z), e6(y2,z);
    }
    actor B {
    	computation = MatSlice;
	output.0 = e1;
	output.1 = e2;
	level = 2;
    }
    actor x1 {
    	computation = CvtColor;
    }
    actor x2 {
    	computation = CvtColor;
    }
    actor y1 {
    	computation = Canny;
 	threshold = 1;
	ratio = 1; 
        cvt = gray2bgr;
    }
    actor y2 {
    	computation = Canny;
	threshold = 1;
	ratio = 1;
        cvt = gray2bgr;
    }
    actor z {
    	computation = MatMerge;
	input.0 = e5;
	input.1 = e6;
	level = 2;
	text = true;
    }
}
}
main {
	load=32 : r1;
}
